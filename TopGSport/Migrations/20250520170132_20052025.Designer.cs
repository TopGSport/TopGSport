// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TopGSport.Database.Data;

#nullable disable

namespace TopGSport.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250520170132_20052025")]
    partial class _20052025
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TopGSport.Database.Models.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bonus")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Features")
                        .HasColumnType("longtext");

                    b.Property<string>("Hours")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Membership");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bonus = "Pierwszy tydzień gratis!",
                            Description = "Dostęp od 22:00 do 6:00. Idealny dla nocnych marków!",
                            Features = "[\"Dost\\u0119p do si\\u0142owni w godzinach nocnych\",\"Szafka na okres treningu\",\"Dost\\u0119p do prysznic\\u00F3w\"]",
                            Hours = "22:00 - 6:00",
                            Name = "Nocny Karnet",
                            Price = "59 zł / miesiąc"
                        },
                        new
                        {
                            Id = 2,
                            Bonus = "",
                            Description = "Pełny dostęp przez 7 dni. Świetny na start lub dla gości.",
                            Features = "[\"7 dni pe\\u0142nego dost\\u0119pu\",\"Wszystkie strefy\",\"Szafka na okres treningu\"]",
                            Hours = "6:00 - 22:00",
                            Name = "Tygodniowy Karnet",
                            Price = "39 zł / tydzień"
                        },
                        new
                        {
                            Id = 3,
                            Bonus = "Darmowa konsultacja z trenerem!",
                            Description = "Nielimitowany dostęp do siłowni przez całą dobę!",
                            Features = "[\"Nielimitowany dost\\u0119p\",\"Wszystkie strefy\",\"Konsultacja z trenerem\"]",
                            Hours = "24/7",
                            Name = "24/7 Karnet",
                            Price = "99 zł / miesiąc"
                        },
                        new
                        {
                            Id = 4,
                            Bonus = "",
                            Description = "Pełny dostęp do wszystkich stref przez 30 dni.",
                            Features = "[\"30 dni pe\\u0142nego dost\\u0119pu\",\"Wszystkie strefy\",\"Szafka na okres treningu\"]",
                            Hours = "6:00 - 22:00",
                            Name = "Miesięczny Karnet",
                            Price = "89 zł / miesiąc"
                        },
                        new
                        {
                            Id = 5,
                            Bonus = "",
                            Description = "Dla uczniów i studentów do 26 lat. WymUsdana legitymacja.",
                            Features = "[\"Dla uczni\\u00F3w i student\\u00F3w\",\"Wszystkie strefy\",\"Szafka na okres treningu\"]",
                            Hours = "6:00 - 22:00",
                            Name = "Studencki Karnet",
                            Price = "69 zł / miesiąc"
                        },
                        new
                        {
                            Id = 6,
                            Bonus = "Darmowy zestaw startowy!",
                            Description = "Wszystko bez limitu + sauna, konsultacje, priorytetowa obsługa.",
                            Features = "[\"Nielimitowany dost\\u0119p\",\"Sauna\",\"Konsultacje\",\"Priorytetowa obs\\u0142uga\"]",
                            Hours = "24/7",
                            Name = "VIP Karnet",
                            Price = "159 zł / miesiąc"
                        },
                        new
                        {
                            Id = 7,
                            Bonus = "",
                            Description = "Dla 2 dorosłych + dzieci do 16 lat. Trenujcie razem!",
                            Features = "[\"Dla rodzin\",\"Wszystkie strefy\",\"Strefa dla dzieci\"]",
                            Hours = "6:00 - 22:00",
                            Name = "Rodzinny Karnet",
                            Price = "199 zł / miesiąc"
                        },
                        new
                        {
                            Id = 8,
                            Bonus = "",
                            Description = "Jednorazowy wstęp do siłowni. Bez zobowiązań.",
                            Features = "[\"Jednorazowy dost\\u0119p\",\"Wszystkie strefy\"]",
                            Hours = "6:00 - 22:00",
                            Name = "Wejście Jednorazowe",
                            Price = "15 zł / wejście"
                        });
                });

            modelBuilder.Entity("TopGSport.Database.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Shop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Clothes",
                            Img = "img123.jpg",
                            Name = "T-shirt BossBoy",
                            Price = 25.00m,
                            Type = "tshirt"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Clothes",
                            Img = "img123.jpg",
                            Name = "Szorty SStreningowe",
                            Price = 22.00m,
                            Type = "shorts"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Clothes",
                            Img = "img123.jpg",
                            Name = "Bluza z kapturem",
                            Price = 40.00m,
                            Type = "hoodie"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Clothes",
                            Img = "img123.jpg",
                            Name = "T-shirt Classic",
                            Price = 20.00m,
                            Type = "tshirt"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Clothes",
                            Img = "img123.jpg",
                            Name = "Szorty Pro",
                            Price = 28.00m,
                            Type = "shorts"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Supplements",
                            Img = "img123.jpg",
                            Name = "Kreatyna Monohydrat",
                            Price = 18.00m,
                            Type = "creatine"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Supplements",
                            Img = "img123.jpg",
                            Name = "Białko WPC 80",
                            Price = 32.00m,
                            Type = "protein"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Supplements",
                            Img = "img123.jpg",
                            Name = "BCAA 2:1:1",
                            Price = 15.00m,
                            Type = "bcaa"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Supplements",
                            Img = "img123.jpg",
                            Name = "Kreatyna Jabłczan",
                            Price = 20.00m,
                            Type = "creatine"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Supplements",
                            Img = "img123.jpg",
                            Name = "Białko Isolate",
                            Price = 38.00m,
                            Type = "protein"
                        });
                });

            modelBuilder.Entity("TopGSport.Database.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MembershipId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MembershipPurchaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("MembershipStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Options")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MembershipId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TopGSport.Database.Models.Users", b =>
                {
                    b.HasOne("TopGSport.Database.Models.Membership", "Membership")
                        .WithMany()
                        .HasForeignKey("MembershipId");

                    b.Navigation("Membership");
                });
#pragma warning restore 612, 618
        }
    }
}
